:root {

    /* Text colors */
    --mainTextColor: #eee;
    --secondTextColor: #333;
    --importantElementColor: #F5B95F;

    /* Quizz buttons color */
    --quizzTrueColor: #F5B95F;
    --quizzFalseColor: #DC6363;
    --quizzBackground: #333;
    --quizzContour: #eee;

}

@font-face {
    font-family: Akrobat-Bold;
    src: url('./Police/Akrobat-Bold.eot');
    src: url('./Police/Akrobat-Bold.eot?#iefix') format('embedded-opentype'),
        url('./Police/Akrobat-Bold.woff2') format('woff2'),
        url('./Police/Akrobat-Bold.woff') format('woff'),
}

* {
    box-sizing: border-box;
    font-family: 'Poppins', Verdana, sans-serif;
}

body {
    margin: 0;
    padding: 0;
    background-color: #2E537A;
}

/* MAIN */
.secondIMG {
    padding: 5vw;
    background-image: url(./assets/background/bgdarkblue.svg);
    background-repeat: no-repeat;
    background-size: cover;
}

/* HEADER */
.background {
    height: 100vh;
    background-image: url(./assets/background/bgheader.svg);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

.navbar {
    position: absolute;
    top: 0;
    width: 100vw;
    display: flex;
    justify-content: space-between;
}

.logo {
    padding-left: 1em;
    padding-top: 0.5em;
}

.logo img {
    width: 50px;
    height: 50px;
    transform: rotate(60deg);
}

.title {
    text-align: center;
    position: relative;
    top: 35vh;
    font-family: 'Poppins', Verdana, sans-serif;
}

h1 {
    margin: 0;
    font-family: 'Akrobat-Bold', Arial, Helvetica, sans-serif;
}

p {
    width: 90%;
    margin: 0 auto;
    color: #eee;
}

/*Menu burger*/
#mySidenav {
    display : none; 
 }
 
 .sidenav {
     height: 100vh;
     width: 220px;
     position: absolute;
     /* peut importe les mouvements que je vais faire sur l'écran, la position de l'élément ne boug */
     z-index: 1;
     /* Là où mon élément est situé par rapport à l'axe z (profondeur en 3D : plus il est élevé et plus l'élément sera proche de toi) : Par défaut, tous les éléments affichés ont un index à zéro. Donc en mettant 1'élément à l'air plus proche */
     top: 0;
     /* On l'utilise en position fixed et définit où sera mon élément dans ma fenêtre. Top 0 = tout en haut */
     background-color: #2F557D;
     padding-top: 60px;
     transition: right 0.3s ease;
     /* left est la propriété  qui, quand on fera l'action (cf sidenav.active) prendra 0.5s à passer de 180px à 0. ease c'est un genre de transition (ça s'ouvre en joli) */
     right: -220px;
     display: flex;
     justify-content: flex-start;
     flex-direction: column;
     align-items: flex-end;
 }
 
 .sidenav a {
     padding: 8px 8px 8px 32px;
     text-decoration: none;
     /* Enlève le style existant sur le texte courant : ici c'est une a donc texte souligné si pas none. */
     font-size: 25px;
     color: #eee;
     display: block;
     margin-right: 30px;
 }
 
 .sidenav a:hover {
     color: var(--importantElementColor);
     /* quand la souris survole les éléments du menu, ils prennent cette couleur */
 }
 
 .sidenav ul {
     list-style-type: none;
     padding: 0;
     margin: 0;
     text-align: right;
 }
 
 .sidenav.active {
     right: 0px;
 }
 
 .sidenav.close {
     position: absolute;
     top: 0;
     right: -220px;
     /* largeur de disparition de l'élément : mon élément sera décalé de -220% sur la gauche */
     font-size: 36px;
 }
 
 .burger-icon span {
     display: block;
     width: 35px;
     height: 5px;
     background-color: var(--importantElementColor);
     margin: 6px 0;
 }
 
 #burgerMenuPadding {
     padding-right:0.5em;
     padding: 15px;
 }
 
 #closeBtn {
     position: absolute;
     top:0;
     right: 5px;
     font-size: 2rem;
     margin-right: 15px;
     color: var(--importantElementColor);
 }

/* PARALLAX */
/* scroll container is wrapper, like a body
perspective for 3D effect = other value are relative to this value
*/
header {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    transform-style: preserve-3d;
    z-index: -1;
}

.wrapper {
    height: 100vh;
    overflow-y: auto;
    overflow-x: hidden;
    perspective: 10px;
}

.background,
.foreground {
    position: absolute;
    height: 100%;
    width: 100%;
    object-fit: cover;
}

.foreground {
    transform: translateZ(-5px) scale(2);
}

.background {
    transform: translateZ(-10px) scale(2);
}

.wave {
    margin: -2vh;
}

/* This allows us to make the boat move up and down infinitely. One up and down move takes 5seconds*/
.boat_active {
    animation: moveBoat 10s ease-in-out infinite;
}

/*This keyframe states the area for the animation on the boat*/
@keyframes moveBoat {
    0% {
        transform: translateX(-250px);
        /*vh = view height*/
    }

    33% {
        transform: translateX(0px);
    }

    66% {
        transform: translateX(320px);
    }

    99% {
        opacity: 1;
    }

    100% {
        transform: translateX(320px);
        opacity: 0;
    }
}

/* QUIZZ SECTION */
.headerQuizz {
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.buttonQuizz {
    margin: 0 auto;
    display: grid;
    grid-template-columns: 20fr 20fr;
    grid-template-rows: 20fr 20fr;
    gap: 20px;
    max-width: 65ch;
}

.answer {
    color: var(--mainTextColor);
    background-color: transparent;
    border-color: var(--quizzContour);
    border-radius: 12px;
    height: 10vh;
    width: auto;
    font-size: 1.2em;
    box-shadow: -0.8px 2px 1px 0.5px rgb(245, 185, 95);
}

.answer:hover {
    cursor: pointer;
}

.picto img {
    height: 10vh;
    width: 10vw;
    min-width: 65px;
    max-width: 130px;
    margin-top: 10vw;
}

h2 {
    margin: 0;
    padding: 2vw;
    color: var(--importantElementColor);
    font-size: 1.8em;
    font-family: 'Akrobat-Bold', Arial, Helvetica, sans-serif;
}

div.buttonQuizz {
    padding: 2vw;
}

.true {
    background-color: var(--quizzTrueColor);
}

.false {
    background-color: var(--quizzFalseColor);
}

.explanation {
    display: none;
    margin-top: 2vw;
    padding-top: 2vw;
    padding-bottom: 2vw;
    font-size: 1.2em;
}

.stopClick {
    pointer-events: none;
}

/* SECTION ASSOCIATION */

.association>p {
    color: var(--mainTextColor);
    text-align: center;
}

.associationImportantText {
    color: var(--importantElementColor)
}

.associationParent {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-gap: 0;
    justify-items: center;
    margin: 2rem;

}

.childBloom {
    grid-area: 1 / 1 / 2 / 2;

}

.childSea {
    grid-area: 1 / 3 / 2 / 4;

}

.childOdyssey {
    grid-area: 2 / 2 / 3 / 3;

}

.childAlgalita {
    grid-area: 3 / 1 / 4 / 2;

}

.childRider {
    grid-area: 3/ 3 / 4 / 4;

}

/* div logo circle */
.circle {
    height: 10vh;
    width: 10vh;
    border-radius: 50%;
    display: inline-block;
    border: 0.5px solid white;
}

.bloom {
    background-image: url(./assets/assos/bloom_logo.jpeg);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;

}

.seashepherd {
    background-image: url(./assets/assos/seasheperd_logo.webp);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

.plasticodyssey {
    background-image: url(./assets/assos/plasticodyssey_logo.png);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

.algalita {
    background-image: url(./assets/assos/alaglita_logo.jpeg);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

.surfrider {
    background-image: url(./assets/assos/surfrider_logo.jpeg);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

/* HR */
hr {
    width: 80vw;
    justify-content: center;
}

/* FOOTER */
footer {
    color: var(--mainTextColor);
    padding-bottom: 5vh;
}

h3,
.wildersPresentation,
ul {
    text-align: center;
    padding-bottom: 2vh;
    padding-top: 2vh;
}

h3 {
    padding-top: 2vh;
    padding-bottom: 2vh;
    color: var(--importantElementColor);
}

footer>ul {
    margin: 0;
    padding: 0;
    padding-bottom: 2vh;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 1fr);
    grid-column-gap: 0;
    grid-row-gap: 1rem;
}

footer>ul>li {
    list-style-type: none;
    display: flex;
    justify-content: center;
}

.wilder {
    all: unset;
    cursor: pointer;
}

.name {
    font-size: 0.8em;
    color: var(--importantElementColor);
}

.thanks {
    text-align: center;
    margin-bottom: 1vh;
}

.someMistersModern {
    color: var(--importantElementColor);
}

.someMistersModern>a {
    all: unset;
    cursor: pointer;
}